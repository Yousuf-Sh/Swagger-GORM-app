swagger: "2.0"
info:
  title: User API
  description: API for managing users
  version: 1.0.0

schemes:
  - http

basePath: /v1

consumes:
  - application/json
produces:
  - application/json

paths:
  /login:
    post:
      tags:
        - users
      summary: JWT auth
      parameters:
        - name: userLogin
          in: body
          required: true
          schema:
            type: object
            required:
              - username
              - password
            properties:
              username:
                type: string
              password:
                type: string
      responses:
        200:
          description: JWT token successfully obtained
          schema:
            type: string
        401:
          description: Unauthorized
        500:
          description: Internal Server error while logging in

  /users:
    get:
      summary: Get all users
      operationId: getUsers
      tags:
        - Users
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/User"
        500:
          description: Internal Server Error
        400:
          description: Bad Request

    post:
      summary: Create a new user
      operationId: createUser
      tags:
        - Users
      parameters:
        - name: user
          in: body
          description: User object
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "201":
          description: Created
        500:
          description: Internal Server Error

  /users/{id}:
    get:
      summary: Get a user by ID
      operationId: getUserByID
      tags:
        - Users
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/User"
        "404":
          description: Not found

    put:
      summary: Update a user
      operationId: updateUser
      tags:
        - Users
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          type: string
        - name: user
          in: body
          description: User object
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
        "404":
          description: Not found
        "500":
          description: Internal server error

    delete:
      summary: Delete a user
      operationId: deleteUser
      tags:
        - Users
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          type: string
      responses:
        "200":
          description: Deleted Successfully
        "404":
          description: Not found

definitions:
  User:
    type: object
    required:
      - name
      - email
      - password
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      email:
        type: string
      password:
        type: string
      uuid:
        type: string
